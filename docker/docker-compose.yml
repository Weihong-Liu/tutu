version: '3.8'

services:
  flask-app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: flask-app
    restart: always
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ../:/app
      - ../log:/app/log
    ports:
      - "5000:5000"  # Flask 服务
    depends_on:
      - redis
    networks:
      - app-network

  celery-worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: celery-worker
    command: celery -A tasks worker --loglevel=INFO --logfile=/app/log/celery_worker.log
    volumes:
      - ../:/app
      - ../log:/app/log
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - app-network

  celery-beat:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: celery-beat
    command: celery -A tasks beat --loglevel=INFO --logfile=/app/log/celery_beat.log
    volumes:
      - ../:/app
      - ../log:/app/log
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ../log:/app/log
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - flask-app
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
